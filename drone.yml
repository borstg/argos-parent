---
kind: pipeline
type: docker
name: argosbuild

platform:
  os: linux
  arch: amd64
  
workspace:
  path: /drone/src

steps:
- name: build
  image: argosnotary/argos-build:3.6.3
  commands:
  - mvn versions:set -DnewVersion=${DRONE_TAG:-${DRONE_BRANCH//\//_}} -DgenerateBackupPoms=false -DprocessAllModules
  - mvn -q verify -Ppitest install
  volumes:
  - name: mvn_cache
    path: /root/.m2/repository

- name: sonar
  image: argosnotary/argos-build:3.6.3
  commands:
  - mvn -q -e verify sonar:sonar -Psonar -Dsonar.projectKey=argosnotary_argos-parent -Dsonar.organization=argosnotary -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN
  environment:
    SONAR_LOGIN:
      from_secret: sonar_login
  volumes:
  - name: mvn_cache
    path: /root/.m2/repository
  depends_on:
  - build
  when:
    event:
    - tag
    - push
  
- name: argos-service
  image: argosnotary/argos-docker-base:11.0.8
  pull: always
  detach: true
  environment:
    auth.frontendRedirectBasePath: http://argos-integration-test-stub:8080
    jwt.token.secret: Z2LcVpgCuGtpb5rBDNIIWGe8RXqYGWDpWFjWhYQUS2Z8rjE2/GTJlu0s6BRYG0Mn0kV8StC9cFE83Jkl68RCkw==
    spring.data.mongodb.uri: mongodb://mongodb/argos
    spring.data.mongodb.database: argos
    spring.security.oauth2.client.provider.azure.authorizationUri: http://argos-integration-test-stub:8080/oauth2/v2.0/authorize
    spring.security.oauth2.client.provider.azure.tokenUri: http://argos-integration-test-stub:8080/oauth2/v2.0/token
    spring.security.oauth2.client.provider.azure.userInfoUri: http://argos-integration-test-stub:8080/v1.0/me
    spring.security.oauth2.client.registration.azure.clientId: client-id
    spring.security.oauth2.client.registration.azure.clientSecret: client-secret
    spring.profiles.active: integration-test
    RUNNABLE_JAR: '/drone/src/argos-service/target/argos-service.jar'
  depends_on:
  - mongodb
  - build
  - argos-integration-test-stub
  
- name: argos-integration-test-service
  image: argosnotary/argos-docker-base:11.0.8
  pull: always
  detach: true
  environment:
    spring.data.mongodb.uri: mongodb://mongodb/argos
    spring.data.mongodb.database: argos
    RUNNABLE_JAR: '/drone/src/argos-integration-test-service/target/argos-integration-test-service.jar'
  depends_on:
  - mongodb
  - build
  - argos-integration-test-stub
  
- name: argos-jenkins
  image: argosnotary/argos-jenkins-base:latest
  pull: always
  detach: true
  environment:
    JAVA_OPTS: -Djenkins.install.runSetupWizard=false
    snapshotsUrl: http://nexus:8081/nexus/content/repositories/snapshots/
    releasesUrl: http://nexus:8081/nexus/content/repositories/releases/
    argosServiceUrl: http://argos-service:8080
  volumes:
  - name: mvn_cache
    path: /root/.m2/repository
  depends_on:
  - build
  - nexus
  
- name: regression test
  image: argosnotary/argos-build:3.6.3
  commands:
  - cd argos-test
  - mvn -q clean verify -Pregression-test-drone
  volumes:
  - name: mvn_cache
    path: /root/.m2/repository
  depends_on:
  - argos-jenkins
  - argos-service
  - argos-integration-test-service
  - nexus

- name: release argos service image
  image: plugins/docker
  settings:
    build_args:
    - VERSION=${DRONE_TAG}
    context: argos-docker
    dockerfile: argos-docker/ServiceDockerfile
    auto_tag: true
    password:
      from_secret: docker_login_token
    repo: argosnotary/argos-service
    username:
      from_secret: docker_login_user
  when:
    event:
    - tag
  depends_on:
  - regression test

- name: sign artifacts
  image: plugins/gpgsign
  settings:
    detach_sign: true
    files:
    - argos4j/target/*.jar
    - argos4j/dependency-reduced-pom.xml
    - argos-service/target/*.jar
    - argos-service/target/pom.xml
    - argos-jenkins-plugin/target/*.hpi
    - argos-jenkins-plugin/pom.xml
    key:
      from_secret: argos-signing-private-key
    passphrase:
      from_secret: argos-signing-private-key-passphrase
  depends_on:
  - regression test

- name: deploy release to sonatype
  image: argosnotary/argos-build:3.6.3
  commands:
  - cp argos4j/dependency-reduced-pom.xml argos4j/target/pom.xml
  - cp argos4j/dependency-reduced-pom.xml.asc argos4j/target/pom.xml.asc
  - mvn -q -f argos4j/pom.xml deploy:deploy-file -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/
  - mvn -q -f argos-service/pom.xml deploy:deploy-file -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/
  environment:
    ossrh_password:
      from_secret: ossrh_login_password
    ossrh_username:
      from_secret: ossrh_login_user
  volumes:
  - name: mvn_cache
    path: /root/.m2/repository
  when:
    event:
    - tag
  depends_on:
  - sign artifacts

- name: slack on success
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
  depends_on:
  - regression test
  - release argos service image
  - deploy release to sonatype
  
services:
- name: mongodb
  image: argosnotary/mongo:4.2.8
- name: nexus
  image: sonatype/nexus:2.14.15-01
- name: argos-integration-test-stub
  image: argosnotary/oauth-stub:2.25.1
  
volumes:
- name: mvn_cache
  temp: {}
- name: mvn_cache
  temp: {}

trigger:
  event:
  - push
  - tag
  - pull_request

---
kind: pipeline
type: docker
name: report result

platform:
  os: linux
  arch: amd64

steps:
- name: slack on failure
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook

trigger:
  status:
  - failure

depends_on:
- argosbuild

...
